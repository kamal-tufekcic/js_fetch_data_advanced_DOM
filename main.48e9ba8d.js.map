{"version":3,"sources":["scripts/main.js"],"names":["link","request","url","fetch","then","response","Promise","race","resolve","reject","setTimeout","Error","status","ok","json","getPhoneIds","phones","map","phone","id","getFirstReceivedDetails","ids","res","getAllSuccessfulDetails","allSettled","results","filter","el","value","getThreeFastestDetails","result","createList","array","className","header","list","document","createElement","classList","add","innerHTML","toUpperCase","join","body","append","arr"],"mappings":";AAAA,aAEA,IAAMA,EAAO,mEAEPC,EAAU,SAACC,GACRC,OAAAA,MAAMD,GACVE,KAAK,SAAAC,GACGC,OAAAA,QAAQC,KAAK,CAClB,IAAID,QAAQ,SAACE,EAASC,GACpBC,WAAW,WACTD,EAAO,IAAIE,MAAgBN,UAAAA,OAAAA,EAASO,WACnC,OAGL,IAAIN,QAAQ,SAAAE,GACNH,EAASQ,IACXL,EAAQH,EAASS,eAOvBC,EAAc,WACXd,OAAAA,EAAWD,GAAAA,OAAAA,EAAX,UAAwBI,KAAK,SAAAY,GAAUA,OAAAA,EAAOC,IAAI,SAAAC,GAASA,OAAAA,EAAMC,QAGpEC,EAA0B,SAACC,GACxBf,OAAAA,QAAQC,KAAKc,EAAIJ,IAAI,SAAAE,GACnBlB,OAAAA,EAAWD,GAAAA,OAAAA,EAAQmB,KAAAA,OAAAA,EAA1B,aACEf,KAAK,SAAAkB,GAAO,MAAA,CAACA,MAGbC,EAA0B,SAACF,GACxBf,OAAAA,QAAQkB,WAAWH,EAAIJ,IAAI,SAAAE,GACzBlB,OAAAA,EAAWD,GAAAA,OAAAA,EAAQmB,KAAAA,OAAAA,EAA1B,aACEf,KAAK,SAAAqB,GACAA,OAAAA,EAAQC,OAAO,SAAAJ,GAAOA,MAAe,cAAfA,EAAIV,SAC9BK,IAAI,SAAAU,GAAMA,OAAAA,EAAGC,WAIdC,EAAyB,SAACR,GAC1BI,IAAAA,EAAU,EAEPnB,OAAAA,QAAQkB,WAAWH,EAAIJ,IAAI,SAAAE,GACzBlB,OAAAA,EAAWD,GAAAA,OAAAA,EAAQmB,KAAAA,OAAAA,EAAnB,UAA8Bf,KAAK,SAAA0B,GACpCL,OAAAA,EAAU,GACZA,IAEOK,GAGF,YAEP1B,KAAK,SAAAkB,GAAOA,OAAAA,EAAII,OAAO,SAAAC,GAAMA,MAAa,SAAbA,EAAGC,QAAkBX,IAAI,SAAAU,GAAMA,OAAAA,EAAGC,WAG/DG,EAAa,SAACC,EAAOC,EAAWC,GAC9BC,IAAAA,EAAOC,SAASC,cAAc,OAEpCF,EAAKG,UAAUC,IAAIN,GAEnBE,EAAKK,UACGN,aAAAA,OAAAA,EAEFF,2BAAAA,OAAAA,EAAMf,IAAI,SAAAU,GAAaA,MAAAA,OAAAA,OAAAA,EAAGR,GAAGsB,cAAjB,WAAuCC,KAAK,IAH9D,mBAOAN,SAASO,KAAKC,OAAOT,IAGvBpB,IAAcX,KAAK,SAAAiB,GACjBD,EAAwBC,GAAKjB,KAAK,SAAAyC,GAChCd,EAAWc,EAAK,iBAAkB,oBAGpCtB,EAAwBF,GAAKjB,KAAK,SAAAyC,GAChCd,EAAWc,EAAK,iBAAkB,oBAGpChB,EAAuBR,GAAKjB,KAAK,SAAAyC,GAC/Bd,EAAWc,EAAK,gBAAiB","file":"main.48e9ba8d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst link = 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\n\nconst request = (url) => {\n  return fetch(url)\n    .then(response => {\n      return Promise.race([\n        new Promise((resolve, reject) => {\n          setTimeout(() => {\n            reject(new Error(`Error: ${response.status}`));\n          }, 5000);\n        }),\n\n        new Promise(resolve => {\n          if (response.ok) {\n            resolve(response.json());\n          }\n        }),\n      ]);\n    });\n};\n\nconst getPhoneIds = () => {\n  return request(`${link}.json`).then(phones => phones.map(phone => phone.id));\n};\n\nconst getFirstReceivedDetails = (ids) => {\n  return Promise.race(ids.map(id => {\n    return request(`${link}/${id}.json`);\n  })).then(res => [res]);\n};\n\nconst getAllSuccessfulDetails = (ids) => {\n  return Promise.allSettled(ids.map(id => {\n    return request(`${link}/${id}.json`);\n  })).then(results => {\n    return results.filter(res => res.status === 'fulfilled')\n      .map(el => el.value);\n  });\n};\n\nconst getThreeFastestDetails = (ids) => {\n  let results = 0;\n\n  return Promise.allSettled(ids.map(id => {\n    return request(`${link}/${id}.json`).then(result => {\n      if (results < 3) {\n        results++;\n\n        return result;\n      }\n\n      return 'late';\n    });\n  })).then(res => res.filter(el => el.value !== 'late').map(el => el.value));\n};\n\nconst createList = (array, className, header) => {\n  const list = document.createElement('div');\n\n  list.classList.add(className);\n\n  list.innerHTML = `\n    <h2>${header}</h2>\n    <ul>\n      ${array.map(el => `<li>${el.id.toUpperCase()}</li>`).join('')}\n    </ul>\n  `;\n\n  document.body.append(list);\n};\n\ngetPhoneIds().then(ids => {\n  getFirstReceivedDetails(ids).then(arr => {\n    createList(arr, 'first-received', 'First Received');\n  });\n\n  getAllSuccessfulDetails(ids).then(arr => {\n    createList(arr, 'all-successful', 'All Successful');\n  });\n\n  getThreeFastestDetails(ids).then(arr => {\n    createList(arr, 'three-fastest', 'Three Fastest');\n  });\n});\n"]}